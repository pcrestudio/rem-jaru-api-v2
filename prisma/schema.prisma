generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum DataType {
  TEXT
  TEXTAREA
  INTEGER
  FLOAT
  DATE
  LIST
  FILE
  EMAIL
  BOOLEAN
}

enum RowLayout {
  single
  twoColumns
  threeColumns
}

model User {
  id        Int        @id @default(autoincrement())
  firstName String     @db.VarChar(50)
  lastName  String     @db.VarChar(50)
  email     String     @db.VarChar(50)
  password  String     @db.VarChar(255)
  isActive  Boolean    @default(true)
  createdAt DateTime?  @default(now())
  updatedAt DateTime?  @updatedAt
  UserRole  UserRole[]

  secondaryResponsible JudicialProcess[] @relation("SecondaryResponsibleRelation")
  responsible          JudicialProcess[] @relation("ResponsibleRelation")

  supervisionResponsible Supervision[] @relation("SupervisionResponsibleRelation")

  creatorToDo     ToDo[] @relation("UserCreator")
  responsibleToDo ToDo[] @relation("UserResponsible")
}

model Role {
  id          Int        @id @default(autoincrement())
  name        String     @db.VarChar(50)
  title       String     @db.VarChar(50)
  description String     @db.VarChar(255)
  createdAt   DateTime?  @default(now())
  updatedAt   DateTime?  @updatedAt
  UserRole    UserRole[]
}

model UserRole {
  userId    Int
  roleId    Int
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  role Role @relation(fields: [roleId], references: [id], onDelete: Cascade)

  @@id([userId, roleId])
}

model Module {
  id               Int                @id @default(autoincrement())
  name             String             @db.VarChar(50)
  isActive         Boolean            @default(true)
  order            Int
  slug             String             @default("") @db.VarChar(50)
  createdAt        DateTime?          @default(now())
  updatedAt        DateTime?          @updatedAt
  Submodule        Submodule[]
  Master           Master[]
  SectionAttribute SectionAttribute[]
  Section          Section[]
  Instance         Instance[]
  GlobalAttribute  GlobalAttribute[]
}

model Submodule {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(50)
  isActive  Boolean   @default(true)
  order     Int
  slug      String    @default("") @db.VarChar(50)
  moduleId  Int
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  module           Module             @relation(fields: [moduleId], references: [id])
  JudicialProcess  JudicialProcess[]
  SectionAttribute SectionAttribute[]
  Section          Section[]
  Instance         Instance[]
  GlobalAttribute  GlobalAttribute[]
  Supervision      Supervision[]
  Master           Master[]
}

model Master {
  id           Int            @id @default(autoincrement())
  name         String         @db.VarChar(50)
  slug         String?        @db.VarChar(50)
  createdAt    DateTime?      @default(now())
  updatedAt    DateTime?      @updatedAt
  isActive     Boolean        @default(true)
  moduleId     Int?
  submoduleId  Int?
  masterOption MasterOption[]

  module    Module?    @relation(fields: [moduleId], references: [id])
  submodule Submodule? @relation(fields: [submoduleId], references: [id])
}

model MasterOption {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(50)
  slug      String    @db.VarChar(50)
  masterId  Int
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  isActive  Boolean   @default(true)

  master           Master            @relation(fields: [masterId], references: [id])
  judicialProjects JudicialProcess[] @relation("ProjectRelation")
  judicialStudios  JudicialProcess[] @relation("StudioRelation")
  ToDo             ToDo[]

  supervisionProjects    Supervision[] @relation("SupervisionProjectRelation")
  supervisionAuthorities Supervision[] @relation("SupervisionAuthorityRelation")
  supervisionSituation   Supervision[] @relation("SupervisionSituationRelation")
}

model JudicialProcess {
  id                     Int       @id @default(autoincrement())
  fileCode               String    @db.VarChar(50)
  demanded               String    @db.VarChar(50)
  plaintiff              String    @db.VarChar(50)
  coDefendant            String    @db.VarChar(50)
  entityReference        String?   @unique
  submoduleId            Int
  cargoStudioId          Int?
  projectId              Int?      @map("project_id")
  responsibleId          Int?      @map("responsible_id")
  secondaryResponsibleId Int?      @map("secondary_responsible_id")
  createdAt              DateTime? @default(now())
  updatedAt              DateTime? @updatedAt
  isActive               Boolean   @default(true)
  controversialMatter    String?   @default("")
  amount                 Float?    @default(0)

  submodule            Submodule     @relation(fields: [submoduleId], references: [id])
  project              MasterOption? @relation("ProjectRelation", fields: [projectId], references: [id], map: "fk_project_id")
  studio               MasterOption? @relation("StudioRelation", fields: [cargoStudioId], references: [id], map: "fk_studio_id")
  responsible          User?         @relation("ResponsibleRelation", fields: [responsibleId], references: [id], map: "fk_responsible_id")
  secondaryResponsible User?         @relation("SecondaryResponsibleRelation", fields: [secondaryResponsibleId], references: [id], map: "fk_creator_id")
}

model Supervision {
  id              Int       @id @default(autoincrement())
  entityReference String?   @unique
  submoduleId     Int
  projectId       Int?      @map("project_id")
  responsibleId   Int?      @map("responsible_id")
  authorityId     Int?      @map("authority_id")
  situationId     Int?      @map("situation_id")
  createdAt       DateTime? @default(now())
  updatedAt       DateTime? @updatedAt
  isActive        Boolean   @default(true)

  submodule   Submodule     @relation(fields: [submoduleId], references: [id])
  project     MasterOption? @relation("SupervisionProjectRelation", fields: [projectId], references: [id], map: "fk_supervision_project_id")
  authority   MasterOption? @relation("SupervisionAuthorityRelation", fields: [authorityId], references: [id], map: "fk_supervision_authority_id")
  situation   MasterOption? @relation("SupervisionSituationRelation", fields: [situationId], references: [id], map: "fk_supervision_situation_id")
  responsible User?         @relation("SupervisionResponsibleRelation", fields: [responsibleId], references: [id], map: "fk_supervision_responsible_id")
}

model Section {
  sectionId   Int                @id @default(autoincrement())
  label       String
  order       Int
  collapsable Boolean
  isActive    Boolean?           @default(true)
  moduleId    Int?
  submoduleId Int?
  module      Module?            @relation(fields: [moduleId], references: [id])
  submodule   Submodule?         @relation(fields: [submoduleId], references: [id])
  attributes  SectionAttribute[]
}

model SectionAttribute {
  sectionAttributeId Int       @id @default(autoincrement())
  slug               String    @unique
  label              String
  sectionId          Int
  moduleId           Int?
  submoduleId        Int?
  order              Int
  dataType           DataType  @default(TEXT)
  rowLayout          RowLayout
  isActive           Boolean?  @default(true)
  isRequired         Boolean?  @default(true)
  isForReport        Boolean?  @default(false)

  section      Section                  @relation(fields: [sectionId], references: [sectionId])
  module       Module?                  @relation(fields: [moduleId], references: [id])
  submodule    Submodule?               @relation(fields: [submoduleId], references: [id])
  options      SectionAttributeOption[]
  values       SectionAttributeValue[]
  triggerRules AttributeRule[]          @relation("Trigger")
  targetRules  AttributeRule[]          @relation("Target")
  Condition    Condition[]
}

model SectionAttributeOption {
  sectionAttributeOptionId Int              @id @default(autoincrement())
  attributeId              Int
  optionLabel              String
  optionValue              String
  isActive                 Boolean?         @default(true)
  attribute                SectionAttribute @relation(fields: [attributeId], references: [sectionAttributeId])
}

model SectionAttributeValue {
  sectionAttributeValueId Int      @id @default(autoincrement())
  sectionAttributeId      Int
  value                   String
  createdAt               DateTime @default(now())
  modifiedAt              DateTime @updatedAt
  createdBy               String
  modifiedBy              String
  entityReference         String?

  attribute                    SectionAttribute?              @relation(fields: [sectionAttributeId], references: [sectionAttributeId])
  SectionAttributeValueHistory SectionAttributeValueHistory[]
}

model GlobalAttribute {
  globalAttributeId Int       @id @default(autoincrement())
  slug              String    @unique
  label             String
  dataType          DataType  @default(TEXT)
  moduleId          Int?
  submoduleId       Int?
  order             Int
  rowLayout         RowLayout @default(single)
  isActive          Boolean?  @default(true)
  isRequired        Boolean?  @default(true)
  isForReport       Boolean?  @default(false)

  module    Module?                 @relation(fields: [moduleId], references: [id])
  submodule Submodule?              @relation(fields: [submoduleId], references: [id])
  options   GlobalAttributeOption[]
  values    GlobalAttributeValue[]
}

model GlobalAttributeOption {
  globalAttributeOptionId Int             @id @default(autoincrement())
  globalAttributeId       Int
  optionLabel             String
  optionValue             String
  isActive                Boolean?        @default(true)
  attribute               GlobalAttribute @relation(fields: [globalAttributeId], references: [globalAttributeId])
}

model GlobalAttributeValue {
  globalAttributeValueId Int      @id @default(autoincrement())
  globalAttributeId      Int
  value                  String
  createdAt              DateTime @default(now())
  modifiedAt             DateTime @updatedAt
  createdBy              String
  modifiedBy             String
  entityReference        String?

  attribute GlobalAttribute @relation(fields: [globalAttributeId], references: [globalAttributeId])
}

model AttributeRule {
  id                 String @id @default(uuid())
  triggerAttributeId Int
  targetAttributeId  Int
  targetValue        String

  triggerAttribute SectionAttribute @relation("Trigger", fields: [triggerAttributeId], references: [sectionAttributeId])
  targetAttribute  SectionAttribute @relation("Target", fields: [targetAttributeId], references: [sectionAttributeId])
  conditions       Condition[]
}

model Condition {
  id              String @id @default(uuid())
  attributeRuleId String
  attributeId     Int
  operator        String
  value           String
  logicalOperator String

  attributeRule AttributeRule    @relation(fields: [attributeRuleId], references: [id])
  attribute     SectionAttribute @relation(fields: [attributeId], references: [sectionAttributeId])
}

model ToDo {
  id            Int       @id @default(autoincrement())
  check         Boolean   @default(false)
  alert         Boolean   @default(false)
  title         String
  description   String
  creatorId     Int
  responsibleId Int
  createdAt     DateTime? @default(now())
  updatedAt     DateTime? @updatedAt
  todoStateId   Int

  entityReference     String?
  entityStepReference String?

  creator     User         @relation("UserCreator", fields: [creatorId], references: [id])
  responsible User         @relation("UserResponsible", fields: [responsibleId], references: [id])
  state       MasterOption @relation(fields: [todoStateId], references: [id])
}

model Instance {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(50)
  moduleId    Int?
  submoduleId Int?
  isGlobal    Boolean? @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  submodule Submodule? @relation(fields: [submoduleId], references: [id])
  module    Module?    @relation(fields: [moduleId], references: [id])
  steps     Step[]
}

model Step {
  id         Int      @id @default(autoincrement())
  name       String   @db.VarChar(50)
  instanceId Int
  isGlobal   Boolean? @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  instance Instance   @relation(fields: [instanceId], references: [id])
  stepData StepData[]
}

model StepData {
  id              Int      @id @default(autoincrement())
  comments        String
  stepId          Int
  entityReference String?
  file            String?
  entityId        String?  @unique
  completed       Boolean? @default(false)

  step Step @relation(fields: [stepId], references: [id])
}

model SectionAttributeValueHistory {
  id                      Int      @id @default(autoincrement())
  sectionAttributeValueId Int
  oldValue                String?
  changeDate              DateTime @default(now())
  changedBy               String?

  sectionAttribute SectionAttributeValue @relation(fields: [sectionAttributeValueId], references: [sectionAttributeValueId])
}

model CEJ_Expedientes {
  idExpediente Int      @id @default(autoincrement())
  expedientePJ String   @unique @db.VarChar(100)
  cuadernos    Int      @default(0)
  actuaciones  Int      @default(0)
  created_at   DateTime @default(now())
  updated_at   DateTime @default(now())
  juzgado      String?  @db.VarChar(1000)
  partes       String?  @db.VarChar(1000)
  activo       String?  @db.VarChar(1)

  usuarios           CEJ_ExpedientesUsuarios[]
  detalleactuaciones CEJ_ExpedientesActuaciones[]
}

model CEJ_ExpedientesUsuarios {
  id           Int              @id @default(autoincrement())
  usuario      String
  Expedientes  CEJ_Expedientes? @relation(fields: [IdExpediente], references: [idExpediente])
  IdExpediente Int?
}

model CEJ_ExpedientesActuaciones {
  id                 Int              @id @default(autoincrement())
  idExpediente       Int?
  idActuacion        String           @db.VarChar(255)
  fecha              DateTime         @default(now())
  resolucion         String?          @db.VarChar(80)
  tiponotificacion   String?          @db.VarChar(255)
  acto               String?          @db.VarChar(255)
  fojas              String?          @db.VarChar(50)
  proveido           DateTime?        @default(now())
  sumilla            String?          @db.VarChar(1000)
  descripcion_usr    String?          @db.VarChar(255)
  resolucion_archivo String?          @db.VarChar(150)
  Expedientes        CEJ_Expedientes? @relation(fields: [idExpediente], references: [idExpediente])
  created_at         DateTime         @default(now())
  updated_at         DateTime         @default(now())
  idProcesoUltimo    Int?
}
